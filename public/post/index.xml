<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | R &amp; R</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2019 Richard Iannone</copyright><lastBuildDate>Fri, 22 Nov 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/R_and_R_share.png</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>blastula v0.3</title>
      <link>/post/blastula-0-3/</link>
      <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/post/blastula-0-3/</guid>
      <description>


&lt;p&gt;&lt;img src=&#34;/post/2019-11-20-blastula-0-3_files/blastula-banner.svg&#34; style=&#34;width:100.0%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The newest release of the &lt;strong&gt;blastula&lt;/strong&gt; package lets you to do amazing things with HTML email in &lt;strong&gt;R&lt;/strong&gt; and &lt;strong&gt;RStudio Connect&lt;/strong&gt;. You can install &lt;strong&gt;blastula&lt;/strong&gt; 0.3 from CRAN with:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;blastula&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a huge release! There are so many new and improved features we won’t be able to get through all of them here. Let’s focus on just two: &lt;strong&gt;R Markdown&lt;/strong&gt; report emailing and improved HTML emailing using SMTP.&lt;/p&gt;
&lt;div id=&#34;r-markdown-report-emailing-via-rstudio-connect&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;strong&gt;R Markdown&lt;/strong&gt; Report Emailing via &lt;strong&gt;RStudio Connect&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The capability to email a rendered &lt;strong&gt;R Markdown&lt;/strong&gt; document in &lt;strong&gt;RStudio Connect&lt;/strong&gt; has been available for well over a year. What would happen is that the report would be in the form of an attachment and message portion of the email would be prepared largely by &lt;strong&gt;RStudio Connect&lt;/strong&gt;. With &lt;strong&gt;blastula&lt;/strong&gt; v0.3, we can now create an email message body directly with &lt;strong&gt;R Markdown&lt;/strong&gt;. Moreover, we can have a ‘main’ report for &lt;strong&gt;RStudio Connect&lt;/strong&gt; viewers (with all of the details) and an ‘email’ version of the report that contains only the necessary elements for the purposes of email.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-11-20-blastula-0-3_files/old_versus_new_rsc.png&#34; style=&#34;width:100.0%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Static elements like &lt;strong&gt;ggplot&lt;/strong&gt;s and images can be part of the &lt;strong&gt;R Markdown&lt;/strong&gt; email. The contents are faithfully converted to an HTML email message body that is fully responsive, so it’ll look great on both larger displays and on mobile devices. We went to great lengths to test and ensure that received emails display without problems on dozens of email clients.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-11-20-blastula-0-3_files/device_client_testing.png&#34; style=&#34;width:100.0%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you thought that emailing &lt;strong&gt;R Markdown&lt;/strong&gt; reports from &lt;strong&gt;RStudio Connect&lt;/strong&gt; was a bit more difficult than should be, you’ll like this next part. There is now an easier-to-use methodology for associating an email to a published &lt;strong&gt;R Markdown&lt;/strong&gt; report. The function &lt;code&gt;prepare_rsc_example_files()&lt;/code&gt; is included to generate a set of example files relevant to &lt;strong&gt;R Markdown&lt;/strong&gt; emailing in &lt;strong&gt;RStudio Connect&lt;/strong&gt;. It provides a working example of a main .Rmd document, an email .Rmd document, and a CSV file that can be included as an attachment (any files generated from the main .Rmd document can also be attached). Documentation that explains how these documents interact, which &lt;strong&gt;blastula&lt;/strong&gt; functions are used, and how to publish to RSC, is available in the internal documentation for the &lt;code&gt;attach_connect_email()&lt;/code&gt; function. An updated support document in the official &lt;strong&gt;RStudio Connect&lt;/strong&gt; documentation is forthcoming.&lt;/p&gt;
&lt;p&gt;I’m pretty sure that &lt;strong&gt;RStudio Connect&lt;/strong&gt; users and the recipients of these emails will love the changes implemented here. Expect further improvements to &lt;strong&gt;R Markdown&lt;/strong&gt; emailing via &lt;strong&gt;RStudio Connect&lt;/strong&gt; in future releases of &lt;strong&gt;blastula&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;improved-html-emailing-using-smtp&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Improved HTML Emailing Using SMTP&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;RStudio Connect&lt;/strong&gt; isn’t the only way to send emails with &lt;strong&gt;blastula&lt;/strong&gt;. We can opt to send our own custom emails through an SMTP server we have access to (e.g., Gmail, Outlook, etc.). These are HTML emails that are, again, responsive to display size and have been well tested on dozens of email clients. Let’s quickly look at three things that have changed for the better with regard to email composition and SMTP sending.&lt;/p&gt;
&lt;div id=&#34;revised-message-composition-with-improved-security&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Revised message composition with improved security&lt;/h3&gt;
&lt;p&gt;Previously, text interpolation features from the &lt;strong&gt;glue&lt;/strong&gt; package were built into the &lt;code&gt;compose_email()&lt;/code&gt; function. This means we could have used the string &lt;code&gt;&amp;quot;The date and time of sending is {Sys.time()}.&amp;quot;&lt;/code&gt; directly as input to, say, the message footer. Having the potential for R evaluation in strings invites security risks, so, this is no longer possible. Instead, we can simply opt to use &lt;code&gt;glue::glue()&lt;/code&gt; ourselves or &lt;code&gt;paste()&lt;/code&gt;. When there is any Markdown or HTML element, the &lt;code&gt;md()&lt;/code&gt; function is required. Here is an example of a simple message that uses Markdown:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;email &amp;lt;-
  compose_email(
    body = md(
&amp;quot;
## Hello!

This is an email message that was generated by the blastula package.

Yep, we can use **Markdown** formatting but be sure to use the `md()` function.

Here is a link to a great song ([E-MAIL ME!](https://youtu.be/-FcJbEg3vX8)).

Cheers,

The blastula team
&amp;quot;),
  footer = md(
&amp;quot;
sent via the [blastula](https://rich-iannone.github.io/blastula) R package
&amp;quot;)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can always preview the &lt;code&gt;email&lt;/code&gt; object in the RStudio Viewer while getting the composition just right. For more details on email message composition with &lt;code&gt;compose_email()&lt;/code&gt;, have a look at the &lt;a href=&#34;https://rich-iannone.github.io/blastula/articles/simple_composition.html&#34;&gt;&lt;em&gt;Simple Email Composition&lt;/em&gt; article&lt;/a&gt; on the project website.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;no-external-software-to-install-for-smtp-sending&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;No external software to install for SMTP sending&lt;/h3&gt;
&lt;p&gt;In the few years that &lt;strong&gt;blastula&lt;/strong&gt; has been available, it relied on various pieces of external software for sending email. Not anymore. This release favors the creation of an RFC-2822 email body, sending through the excellent &lt;strong&gt;curl&lt;/strong&gt; package. This all means that emails can now be sent dependably with the &lt;code&gt;smtp_send()&lt;/code&gt; function on all the major platforms with no up-front installation of a third-party binary.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;improved-credentials-handling&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Improved credentials handling&lt;/h3&gt;
&lt;p&gt;The package now ships with functions for setting up and retrieving SMTP configuration and credentials information. We can set this in the system-wide key-value store with &lt;code&gt;create_smtp_creds_key()&lt;/code&gt;. With such a key added, the credentials helper &lt;code&gt;creds_key()&lt;/code&gt; can be used when sending email through &lt;code&gt;smtp_send()&lt;/code&gt;. Alternatively, a credentials file can be created using the &lt;code&gt;create_smtp_creds_file()&lt;/code&gt; function (retrieved with the &lt;code&gt;creds_file()&lt;/code&gt; credentials helper). Lastly, credentials can be fully specified at the time of sending with the &lt;code&gt;creds()&lt;/code&gt; function. Whenever a password is needed for setup, a prompt will appear for password entry and the password text will be obscured.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;more&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;More!&lt;/h3&gt;
&lt;p&gt;Other quality-of-life improvements include automatic image embedding (via Base64 encoding) from the use of the &lt;code&gt;add_image()&lt;/code&gt; and &lt;code&gt;add_ggplot()&lt;/code&gt; functions when used in conjunction with &lt;code&gt;compose_email()&lt;/code&gt;. There’s the option for automatic image deployment and retrieval of the external image tag through the &lt;code&gt;add_imgur_image()&lt;/code&gt; function. Finally, there is a new set of &lt;code&gt;block_*()&lt;/code&gt; functions that help us compose emails with more complex layouts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;wrapping-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;I hope that you try out the new release of the &lt;strong&gt;blastula&lt;/strong&gt; package. So many useful things can be created with &lt;strong&gt;R&lt;/strong&gt; and having the means to deliver our findings through email is super satisfying both for the sender and the recipient.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
