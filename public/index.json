[{"authors":["admin"],"categories":null,"content":" I’m a software engineer at RStudio. Most of my work involves creating R packages that make it easier to work with and communicate data. I also enjoy opportunities to teach people how to be successful with R.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"d33c1cd8bead9ce2a6229ddb7fdca4a5","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I’m a software engineer at RStudio. Most of my work involves creating R packages that make it easier to work with and communicate data. I also enjoy opportunities to teach people how to be successful with R.","tags":null,"title":"Richard Iannone","type":"authors"},{"authors":[],"categories":[],"content":" The newest release of the blastula package lets you to do amazing things with HTML email in R and RStudio Connect. You can install blastula 0.3 from CRAN with:\ninstall.packages(\u0026quot;blastula\u0026quot;) This is a huge release! There are so many new and improved features we won’t be able to get through all of them here. Let’s focus on just two: R Markdown report emailing and improved HTML emailing using SMTP.\nR Markdown Report Emailing via RStudio Connect The capability to email a rendered R Markdown document in RStudio Connect has been available for well over a year. What would happen is that the report would be in the form of an attachment and message portion of the email would be prepared largely by RStudio Connect. With blastula v0.3, we can now create an email message body directly with R Markdown. Moreover, we can have a ‘main’ report for RStudio Connect viewers (with all of the details) and an ‘email’ version of the report that contains only the necessary elements for the purposes of email.\nStatic elements like ggplots and images can be part of the R Markdown email. The contents are faithfully converted to an HTML email message body that is fully responsive, so it’ll look great on both larger displays and on mobile devices. We went to great lengths to test and ensure that received emails display without problems on dozens of email clients.\nIf you thought that emailing R Markdown reports from RStudio Connect was a bit more difficult than should be, you’ll like this next part. There is now an easier-to-use methodology for associating an email to a published R Markdown report. The function prepare_rsc_example_files() is included to generate a set of example files relevant to R Markdown emailing in RStudio Connect. It provides a working example of a main .Rmd document, an email .Rmd document, and a CSV file that can be included as an attachment (any files generated from the main .Rmd document can also be attached). Documentation that explains how these documents interact, which blastula functions are used, and how to publish to RSC, is available in the internal documentation for the attach_connect_email() function. An updated support document in the official RStudio Connect documentation is forthcoming.\nI’m pretty sure that RStudio Connect users and the recipients of these emails will love the changes implemented here. Expect further improvements to R Markdown emailing via RStudio Connect in future releases of blastula.\n Improved HTML Emailing Using SMTP RStudio Connect isn’t the only way to send emails with blastula. We can opt to send our own custom emails through an SMTP server we have access to (e.g., Gmail, Outlook, etc.). These are HTML emails that are, again, responsive to display size and have been well tested on dozens of email clients. Let’s quickly look at three things that have changed for the better with regard to email composition and SMTP sending.\nRevised message composition with improved security Previously, text interpolation features from the glue package were built into the compose_email() function. This means we could have used the string \u0026quot;The date and time of sending is {Sys.time()}.\u0026quot; directly as input to, say, the message footer. Having the potential for R evaluation in strings invites security risks, so, this is no longer possible. Instead, we can simply opt to use glue::glue() ourselves or paste(). When there is any Markdown or HTML element, the md() function is required. Here is an example of a simple message that uses Markdown:\nemail \u0026lt;- compose_email( body = md( \u0026quot; ## Hello! This is an email message that was generated by the blastula package. Yep, we can use **Markdown** formatting but be sure to use the `md()` function. Here is a link to a great song ([E-MAIL ME!](https://youtu.be/-FcJbEg3vX8)). Cheers, The blastula team \u0026quot;), footer = md( \u0026quot; sent via the [blastula](https://rich-iannone.github.io/blastula) R package \u0026quot;) )  We can always preview the email object in the RStudio Viewer while getting the composition just right. For more details on email message composition with compose_email(), have a look at the Simple Email Composition article on the project website.\n No external software to install for SMTP sending In the few years that blastula has been available, it relied on various pieces of external software for sending email. Not anymore. This release favors the creation of an RFC-2822 email body, sending through the excellent curl package. This all means that emails can now be sent dependably with the smtp_send() function on all the major platforms with no up-front installation of a third-party binary.\n Improved credentials handling The package now ships with functions for setting up and retrieving SMTP configuration and credentials information. We can set this in the system-wide key-value store with create_smtp_creds_key(). With such a key added, the credentials helper creds_key() can be used when sending email through smtp_send(). Alternatively, a credentials file can be created using the create_smtp_creds_file() function (retrieved with the creds_file() credentials helper). Lastly, credentials can be fully specified at the time of sending with the creds() function. Whenever a password is needed for setup, a prompt will appear for password entry and the password text will be obscured.\n More! Other quality-of-life improvements include automatic image embedding (via Base64 encoding) from the use of the add_image() and add_ggplot() functions when used in conjunction with compose_email(). There’s the option for automatic image deployment and retrieval of the external image tag through the add_imgur_image() function. Finally, there is a new set of block_*() functions that help us compose emails with more complex layouts.\n  Wrapping Up I hope that you try out the new release of the blastula package. So many useful things can be created with R and having the means to deliver our findings through email is super satisfying both for the sender and the recipient.\n ","date":1574380800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1574454660,"objectID":"4d81e889cbfec92d782654b9d919f230","permalink":"/post/blastula-0-3/","publishdate":"2019-11-22T00:00:00Z","relpermalink":"/post/blastula-0-3/","section":"post","summary":"The newest release of the blastula package lets you to do amazing things with HTML email in R and RStudio Connect. You can install blastula 0.3 from CRAN with:\ninstall.packages(\u0026quot;blastula\u0026quot;) This is a huge release! There are so many new and improved features we won’t be able to get through all of them here. Let’s focus on just two: R Markdown report emailing and improved HTML emailing using SMTP.","tags":["R Packages"],"title":"blastula v0.3","type":"post"},{"authors":null,"categories":null,"content":" The book entitled Exploring Data with R teaches you how to do data analysis with R. The book doesn’t assume any prior experience with programming making it a great introduction with easy-to-follow examples and useful exercises.\n","date":1571529600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571529600,"objectID":"20281aed3cfbf9fa7fca750da29de323","permalink":"/projects/exploring-data-with-r-book/","publishdate":"2019-10-20T00:00:00Z","relpermalink":"/projects/exploring-data-with-r-book/","section":"projects","summary":"An introductory book for data analysis in R.","tags":["R Books"],"title":"[R book] Exploring Data with R","type":"projects"},{"authors":[],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":[],"categories":null,"content":"","date":1547683200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1547683200,"objectID":"ea57c95009d46583f549e9ae1d8a340d","permalink":"/talk/rstudio-conf-2019/","publishdate":"2019-01-17T00:00:00Z","relpermalink":"/talk/rstudio-conf-2019/","section":"talk","summary":"A talk given at rstudio::conf 2019.","tags":[],"title":"Introducing the gt Package","type":"talk"},{"authors":null,"categories":null,"content":" With the gt package, anyone can make wonderful-looking tables using the R programming language. The gt philosophy: we can construct a wide variety of useful tables with a cohesive set of table parts. These include the table header, the stub, the stub head, the column labels, the table body, and the table footer.\nThe gt API is designed to be both straightforward yet powerful. The emphasis is on simple functions for the everyday display table needs. However, there are functions for customizing and annotating tables to convey additional information.\n","date":1521504000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1521504000,"objectID":"31b25af6531d4d0883a784f3dab5370a","permalink":"/projects/gt-pkg/","publishdate":"2018-03-20T00:00:00Z","relpermalink":"/projects/gt-pkg/","section":"projects","summary":"Easily generate information-rich, publication-quality tables from R","tags":["R Packages"],"title":"[R package] gt","type":"projects"},{"authors":null,"categories":null,"content":" The blastula package makes it easy to produce and send HTML email from R. The message can have three content areas (the body, the header, and the footer) and we can insert Markdown text, R expressions, block-based components, and even some raw HTML. The underlying HTML/CSS is meant to display properly across a wide range of email clients and webmail services. The resulting email message is responsive so it’ll look great on computers and mobile devices.\n","date":1502582400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1502582400,"objectID":"37022a39ee9e857e037bbd8ad639a07d","permalink":"/projects/blastula-pkg/","publishdate":"2017-08-13T00:00:00Z","relpermalink":"/projects/blastula-pkg/","section":"projects","summary":"The blastula R package lets us send HTML email messages.","tags":["R Packages"],"title":"[R package] blastula","type":"projects"},{"authors":null,"categories":null,"content":" The pointblank package let’s us validate data in local data frames or tibbles, in CSV and TSV files, and in database tables (PostgreSQL and MySQL). We can get a detailed summary report of the interrogation, showing how many individual tests in each validation step had passed or failed. The self-contained HTML report provides detailed information on the validation outcomes and it can be used as web content.\n","date":1487808000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1487808000,"objectID":"0c925a48661aa287e516b3344a71ecb8","permalink":"/projects/pointblank-pkg/","publishdate":"2017-02-23T00:00:00Z","relpermalink":"/projects/pointblank-pkg/","section":"projects","summary":"The pointblank R package lets us validate data tables.","tags":["R Packages"],"title":"[R package] pointblank","type":"projects"},{"authors":null,"categories":null,"content":" The DiagrammeR package has a collection of graph functions allow you to create graph objects, modify those graphs, get information from the graphs, and do many other useful things. We can easily generate network graphs with data available in tabular datasets. Two specialized data frames contain node data and attributes (node data frames) and edges with associated edge attributes (edge data frames). Because the attributes are always kept alongside the node and edge definitions (within the graph object itself), we can easily work with them.\n","date":1419724800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1419724800,"objectID":"672d8104f5a9af8960efacc7c5dceeab","permalink":"/projects/diagrammer-pkg/","publishdate":"2014-12-28T00:00:00Z","relpermalink":"/projects/diagrammer-pkg/","section":"projects","summary":"The DiagrammeR R package lets create, modify, and visualize network graphs.","tags":["R Packages"],"title":"[R package] DiagrammeR","type":"projects"},{"authors":null,"categories":null,"content":" The stationaRy package allows for fast retrieval of meteorological data from met stations located all over the world. Weather data originates from the 29,729 stations available in this dataset where many of these contain data that go back decades. The data comes from the Integrated Surface Dataset (ISD), which is maintained by the National Oceanic and Atmospheric Administration (NOAA).\n","date":1397347200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1397347200,"objectID":"ef1413ba0f65aca93e7de598e310527b","permalink":"/projects/stationary-pkg/","publishdate":"2014-04-13T00:00:00Z","relpermalink":"/projects/stationary-pkg/","section":"projects","summary":"The stationaRy R package gives us access to historical weather data.","tags":["R Packages"],"title":"[R package] stationaRy","type":"projects"},{"authors":null,"categories":null,"content":" splitr is an R package for conducting trajectory and dispersion modeling with HYSPLIT. This is useful for atmospheric scientists as the package helps to determine, from one or more receptor sites, where arriving air masses originated. Conversely, it’s possible to model trajectories of air masses from receptor sites. Forward and backward modeling of gas-phase or particulate matter can also be conducted from defined sites. It’s a means to help explain how, where, and when chemicals and materials are atmospherically transported, dispersed, and deposited.\n","date":1386633600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1386633600,"objectID":"89abb0b75e9bc0996c37fc60dd5c46f9","permalink":"/projects/splitr-pkg/","publishdate":"2013-12-10T00:00:00Z","relpermalink":"/projects/splitr-pkg/","section":"projects","summary":"The splitr R package helps model wind trajectories and particle dispersion.","tags":["R Packages"],"title":"[R package] splitr","type":"projects"}]